문자열 형변환
	1. 다른 자료형을 문자열로
		문자열과 다른 일반 자료형을 연결하면 결과는 문자열이 된다.

	2. 문자열을 다른 자료형으로 
		일반 자료형은 일반 자료형끼리만 형변환이 가능하다.
		문자열 타입은 클래스 타입이므로, 일반 자료형의 클래스타입의 도움을 받아야 한다.

		Integer.parseInt(null)	=> 문자열에서 변환된 정수 값
		Float.parseFloat(null)		=> 문자열에서 변환된 실수 값
		Double.parseDouble(null)	=> 문자열에서 변환된 실수 값

-------------------------------------------------------------------------------------------------------------------------------------------------

입력
	1. 커서가 깜빡이고 있는 상태 ex) 메모장, 검색창 ...
	2. 입력하기 전에 출력을 통해 어떤 값을 입력해야할지 사용자에서
	알려주어야 한다.

입력 클래스
	Scanner sc = new Scanner(System.in);


입력 메소드
	next() : 사용자가 입력한 문자열 값

	-  사용자가 입력한 값 중 공백 또는 줄바꿈 문자를 구분점으로 
	각 문자열 분리

	-  첫 번째 문자열은 첫 번째 next()에 담고
	   두 번째 문자열은 두 번째 next()에 담는다.

	nextLine() : 사용자가 입력한 문자열 값
	
	- 공백 또는 줄바꿈 문자도 값으로 취급하기 때문에 그래도 입력받는다.

-------------------------------------------------------------------------------------------------------------------------------------------------

연산자 
	기능이 있는 특수문자

연산자의 우선순위 (최단산쉬관리삼대)
	최우선 연산자    →	( )
	단항 연산자        →    (double)3
	산술 연산자        →    ( +, -, *, / )
	쉬프트 연산자    →    (<<, >>)
	관계 연산자        →    (> , <, <=, =>, ==, !=)
	논리 연산자        →    (&&, ||, ) 
	삼항 연산자        →    (조건식 ? 참일 때 값 : 거짓일 때 값)
	대입 연산자        →    (=, +=, -=, *=, /=)

결합성
	하나의 수식 에 동일한 연산자가 여래 개 사용되면
	알맞은 방향으로 결합되어 연산되는 성질 (왼쪽 → 오른쪽)

-------------------------------------------------------------------------------------------------------------------------------------------------

논리형 (boolean)
	참은 true라는 값으로 인식하고 거짓은 false라는 값으로 인식한다.

	선언
	boolean 변수명 = 값(true or false);
	----------
	1byte

조건식 
	결과가 참 또는 거짓, 둘 중 하나가 나오는 식

	ex) 
	x > 10 = ?		// 결과가 참 또는 거짓 둘 중 하나(조건식)
	int x = 20; 		// 결과가 하나(조건식 x )

관계 연산자 
	==	: 같다.
	!=	: 같지 않다
	> , <	: 초과, 미만
	>=, <=	: 이상 , 이하

논리 연사자
	&& (논리곱), A && B , AND 두 조건식 모두 참이면 참
	||   (논리합), A  ||  B,  OR 두 조건식 중 하나라도 참이면 참

삼항 연산자
	( ? :  )
	조건식 ? 참일 때 값 : 거짓일 때 값
	10 ? 9 ? 10  :

단항 연산자(항이 하나인 연산자)
	    !, !A, NOT 조건식이 참이면 거짓으로 변경



















